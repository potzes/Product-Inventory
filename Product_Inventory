#include <stdio.h>
#include <stdlib.h>
#include <string.h>

void menu(int *act2);

int main()
{
    int act;
    int act3;
    int id = 0;
    int tot = 0;
    char inv[40];
    char append[5] = ".txt";
    char TempInv[45];
    FILE *fptr;
    
    typedef struct
    {
        char name[20];
        int price;
        int stock;
    }product;
    product *prod = NULL;

    printf("1 - Create new inventory\n");
    printf("2 - Load an inventory\n");
    scanf("%d", &act3);

    switch(act3)
    {
        case 1:
        {
            printf("Enter inventory name: ");
            scanf(" %[^\n]", inv);
            strcpy(TempInv, inv);
            strncat(TempInv, append, 5);
            fptr = fopen(TempInv, "w");
            if(fptr == NULL)
            {
                printf("Error occurs when creating an inventory!\n");
                return 1;
            }
            fclose(fptr);
            break;
        }

        case 2:
        {
            printf("Enter inventory name: ");
            scanf(" %[^\n]", inv);
            strcpy(TempInv, inv);
            strncat(TempInv, append, 5);
            fptr = fopen(TempInv, "r");
            if(fptr == NULL)
            {
                printf("Inventory with name \"%s\" does not exist.\n", inv);
                return 1;
            }
            fclose(fptr);

            fptr = fopen(TempInv, "rb");
            if(fptr == NULL)
            {
                printf("Error retrieving the file\n");
                return 1;
            }
            fread(&tot, sizeof(int), 1, fptr);
            product *temp = malloc(sizeof(product) * tot);
            if(temp == NULL)
            {
                printf("Error allocating memory.\n");
                return 1;
            }
            prod = temp;
            for(int load = 0; load < tot; load++)
            {
                fread(&prod[load].name, sizeof(prod[load].name), 1, fptr);
                if(fread(&prod[load].name, sizeof(prod[load].name), 1, fptr) != 1)
                {
                    printf("Error retrieving accurate data\n");
                    return 1;
                }
                fread(&prod[load].price, sizeof(prod[load].price), 1, fptr);
                if(fread(&prod[load].price, sizeof(prod[load].price), 1, fptr) != 1)
                {
                    printf("Error retrieving accurate data\n");
                    return 1; 
                }
                fread(&prod[load].stock, sizeof(prod[load].stock), 1, fptr);
                if(fread(&prod[load].stock, sizeof(prod[load].stock), 1, fptr) != 1)
                {
                    printf("Error retrieving accurate data\n");
                    return 1; 
                }
            }
            fclose(fptr);
            break;
        }
    }

    do
    {
        printf("\n==== %s Inventory ====\n", inv);
        printf("1 - Add New Product\n");
        printf("2 - View Inventory\n");
        printf("3 - Search Product\n");
        printf("4 - Exit\n");
        scanf("%d", &act);
        switch(act)
        {
            case 1:
            {
                tot++;
                product *temp = realloc(prod, tot * sizeof(product));
                if(temp == NULL)
                {
                    printf("Memory failed\n");
                    return 1;
                }
                prod = temp;
                printf("\nEnter product name: ");
                scanf(" %[^\n]", prod[tot - 1].name);
                printf("Enter product price: ");
                scanf("%d", &prod[tot - 1].price);
                printf("Enter product stock: ");
                scanf("%d", &prod[tot - 1].stock);
                menu(&act);
                break;
            }
            
            case 2:
            {
                for(int i = 0; i < tot; i++)
                {
                    printf("\nName: %s\n", prod[i].name);
                    printf("Price: %d\n", prod[i].price);
                    printf("Stock: %d\n", prod[i].stock);
                }
                menu(&act);
                break;
            }
            case 3:
            {
                char search[20];
                printf("Search product name: ");
                scanf(" %[^\n]", search);
                for(int ii = 0; ii < tot; ii++)
                {
                    if(strcmp(search, prod[ii].name)==0)
                    {
                        printf("\nName: %s\n", prod[ii].name);
                        printf("Price: %d\n", prod[ii].price);
                        printf("Stock: %d\n", prod[ii].stock);
                        int actt;
                        printf("\n---------------\n");
                        printf("1 - Edit product\n");
                        printf("2 - Menu\n");
                        printf("3 - Exit\n");
                        scanf("%d", &actt);
                        printf("---------------\n");    
                        switch(actt)
                        {
                            case 1:
                            {
                                int acttt;
                                printf("1 - Edit product name\n");
                                printf("2 - Edit product price\n");
                                printf("3 - Edit product stock\n");
                                scanf("%d", &acttt);
                                switch(acttt)
                                {
                                    case 1:
                                    {
                                        printf("Enter updated product name: ");
                                        scanf(" %[^\n]", prod[ii].name);
                                        printf("Updated successfully\n");
                                        menu(&act);
                                        break;
                                    }
                                    
                                    case 2:
                                    {
                                        printf("Enter updated product price: ");
                                        scanf("%d", &prod[ii].price);
                                        printf("Updated successfully\n");
                                        menu(&act);
                                        break;
                                        
                                    case 3:
                                    {
                                        printf("Enter updated product stock: ");
                                        scanf("%d", &prod[ii].stock);
                                        printf("Updated successfully\n");
                                        menu(&act);
                                        break;
                                    }
                                    }
                                }
                            }
                            
                            case 2: break;
                    
                            case 3:
                            {
                                act = 4;
                                break;
                            }
                        }
                    }
                }
                break;
            }
        }
    } while(act != 4);

    fptr = fopen(TempInv, "wb");
    if(fptr == NULL)
    {
        printf("Error\n");
        return 1;
    }
    fwrite(&tot, sizeof(tot), 1, fptr);
    for(int iii = 0; iii < tot; iii++)
    {
        fwrite(&prod[iii].name, sizeof(prod[iii].name), 1, fptr);
        if(fwrite(&prod[iii].name, sizeof(prod[iii].name), 1, fptr) != 1)
        {
        printf("Error retrieving accurate data\n");
        return 1; 
        }
        fwrite(&prod[iii].price, sizeof(prod[iii].price), 1, fptr);
        if(fwrite(&prod[iii].price, sizeof(prod[iii].price), 1, fptr) != 1)
        {
        printf("Error retrieving accurate data\n");
        return 1; 
        }
        fwrite(&prod[iii].stock, sizeof(prod[iii].stock), 1, fptr);
        if(fwrite(&prod[iii].stock, sizeof(prod[iii].stock), 1, fptr) != 1)
        {
        printf("Error retrieving accurate data\n");
        return 1; 
        }
    }
    fclose(fptr);
    return 0;
}

void menu(int *act2)
{
    int opt; 
    printf("\n---------------\n");
    printf("1 - Menu\n");
    printf("2 - Exit\n");
    scanf("%d", &opt);
    printf("---------------\n");    
    switch(opt)
    {
        case 1: break;

        case 2:
        {
            *act2 = 4;
            break;
        }
    }
}
